/*
 *
 * Confidential Information of Telekinesys Research Limited (t/a Havok). Not for disclosure or distribution without Havok's
 * prior written consent. This software contains code, techniques and know-how which is confidential and proprietary to Havok.
 * Product and Trade Secret source code contains trade secrets of Havok. Havok Software (C) Copyright 1999-2013 Telekinesys Research Limited t/a Havok. All Rights Reserved. Use of this software is subject to the terms of an end user license agreement.
 *
 */
//
// NOTE: This file is autogenerated. Any changes will be lost.
//
//HK_REFLECTION_PARSER_EXCLUDE_FILE
HK_TEST_DECLARE(testCarvers)
HK_TEST_DECLARE(testMaterialMap)
HK_TEST_DECLARE(subAndExtract)
HK_TEST_DECLARE(average)
HK_TEST_DECLARE(lessLex)
HK_TEST_DECLARE(lessLexY)
HK_TEST_DECLARE(slopeLess)
HK_TEST_DECLARE(orientation3)
HK_TEST_DECLARE(mulDiv)
HK_TEST_DECLARE(intersection)
HK_TEST_DECLARE(pushToLeft)
HK_TEST_DECLARE(setupDomain_01)
HK_TEST_DECLARE(setupDomain_nonUniform)
HK_TEST_DECLARE(setupDomain_translation)
HK_TEST_DECLARE(convertSegmentExternalToInternal)
HK_TEST_DECLARE(addBoundaryPoints_middle)
HK_TEST_DECLARE(addBoundaryPoints_sharedEdge)
HK_TEST_DECLARE(addBoundaryPoints_one)
HK_TEST_DECLARE(addBoundaryPoints_three)
HK_TEST_DECLARE(eventQueue_heapify)
HK_TEST_DECLARE(eventQueue_maintain)
HK_TEST_DECLARE(isSimplePolygon_line)
HK_TEST_DECLARE(isSimplePolygon_goodTri)
HK_TEST_DECLARE(isSimplePolygon_badTri)
HK_TEST_DECLARE(isSimplePolygon_rect)
HK_TEST_DECLARE(isSimplePolygon_bowtie1)
HK_TEST_DECLARE(isSimplePolygon_bowtie2)
HK_TEST_DECLARE(isSimplePolygon_slightlyConcave)
HK_TEST_DECLARE(isSimplePolygon_degen)
HK_TEST_DECLARE(makeConvexHull)
HK_TEST_DECLARE(Membership_inFace)
HK_TEST_DECLARE(Membership_inPainter)
HK_TEST_DECLARE(Membership_inCutter)
HK_TEST_DECLARE(Difference_setAndApply)
HK_TEST_DECLARE(createNonFacePolygon_outside)
HK_TEST_DECLARE(createNonFacePolygon_line)
HK_TEST_DECLARE(createNonFacePolygon_miswoundTriangle)
HK_TEST_DECLARE(createNonFacePolygon_clippedTriangle)
HK_TEST_DECLARE(findMaximalCaliper)
HK_TEST_DECLARE(createFacePolygon_simpleTri)
HK_TEST_DECLARE(createFacePolygon_duplicatedVerts)
HK_TEST_DECLARE(createFacePolygon_miswoundTriangle)
HK_TEST_DECLARE(eventIsValid_startSegments)
HK_TEST_DECLARE(eventIsValid_intersection_generation)
HK_TEST_DECLARE(eventIsValid_intersection_order)
HK_TEST_DECLARE(gatherSegmentsForEvent_twoStartInEmpty)
HK_TEST_DECLARE(getBoundingRegions_none)
HK_TEST_DECLARE(sortSegmentsBySlope_twoStart)
HK_TEST_DECLARE(sortSegmentsBySlope_fourStart)
HK_TEST_DECLARE(sortSegmentsBySlope_twoEqualSlope)
HK_TEST_DECLARE(mergeEqualSlopeSegments)
HK_TEST_DECLARE(updateOutgoingSegmentData_cutter)
HK_TEST_DECLARE(updateOutgoingSegmentData_face)
HK_TEST_DECLARE(addIntersectionEvents_emptyOutside)
HK_TEST_DECLARE(addIntersectionEvents_emptyMiddle_endIntersection)
HK_TEST_DECLARE(addIntersectionEvents_emptyMiddle_boundsIntersect)
HK_TEST_DECLARE(addIntersectionEvents_middleAndSides)
HK_TEST_DECLARE(clipDegenerateEars_normalTri)
HK_TEST_DECLARE(clipDegenerateEars_singleton)
HK_TEST_DECLARE(clipDegenerateEars_doubleton)
HK_TEST_DECLARE(clipDegenerateEars_twoEars)
HK_TEST_DECLARE(clipDegenerateEars_twoEarsWithCenter)
HK_TEST_DECLARE(clipDegenerateEars_propeller)
HK_TEST_DECLARE(testcase_uncut)
HK_TEST_DECLARE(testcase_tritri)
HK_TEST_DECLARE(testcase_bottomReflex1)
HK_TEST_DECLARE(testcase_bottomReflex2)
HK_TEST_DECLARE(testcase_bottomReflex3)
HK_TEST_DECLARE(testcase_topReflex1)
HK_TEST_DECLARE(testcase_topReflex2)
HK_TEST_DECLARE(testcase_rightReflex1)
HK_TEST_DECLARE(testcase_rightReflex2)
HK_TEST_DECLARE(testcase_rightReflex3)
HK_TEST_DECLARE(testcase_leftReflex)
HK_TEST_DECLARE(testcase_startCapture)
HK_TEST_DECLARE(testcase_paintNone)
HK_TEST_DECLARE(testcase_paintAll)
HK_TEST_DECLARE(testcase_paintHalf)
HK_TEST_DECLARE(testcase_paintHalves)
HK_TEST_DECLARE(testcase_paintOverlap)
HK_TEST_DECLARE(testcase_fuzz)
HK_TEST_DECLARE(testVoxels)
HK_TEST_DECLARE(intervalPartition_trivial)
HK_TEST_DECLARE(intervalPartition_findInterval)
HK_TEST_DECLARE(intervalPartition_lessAll1)
HK_TEST_DECLARE(intervalPartition_lessAll2)
HK_TEST_DECLARE(intervalPartition_fillGap)
HK_TEST_DECLARE(intervalPartition_lessMiddle)
HK_TEST_DECLARE(intervalPartition_greaterMiddle)
HK_TEST_DECLARE(intervalPartition_intersectMiddle1)
HK_TEST_DECLARE(intervalPartition_intersectMiddle2)
HK_TEST_DECLARE(intervalPartition_sawtooth)
HK_TEST_DECLARE(intervalPartition_extrudeX)
HK_TEST_DECLARE(intervalPartition_clipDefined1)
HK_TEST_DECLARE(intervalPartition_clipDefined2)
HK_TEST_DECLARE(intervalPartition_clipDefined3)
HK_TEST_DECLARE(intersectSweptSegmentTriangle_simple1)
HK_TEST_DECLARE(intersectSweptSegmentTriangle_diagonal)
HK_TEST_DECLARE(intersectSweptSegmentTriangle_clipPartialLeft)
HK_TEST_DECLARE(intersectSweptSegmentTriangle_clipPartialRight)
HK_TEST_DECLARE(intersectSweptSegmentTriangle_clipPartialFront)
HK_TEST_DECLARE(intersectSweptSegmentTriangle_clipPartialBack)
HK_TEST_DECLARE(intersectSweptSegmentTriangle_obliqueDisplacement)
HK_TEST_DECLARE(intersectSweptSegmentTriangle_clipTop)
HK_TEST_DECLARE(intersectSweptSegmentTriangle_clipBottom)
HK_TEST_DECLARE(intersectSweptSegmentExtrudedEdge_simple)

/*
 * Havok SDK - Base file, BUILD(#20131019)
 * 
 * Confidential Information of Havok.  (C) Copyright 1999-2013
 * Telekinesys Research Limited t/a Havok. All Rights Reserved. The Havok
 * Logo, and the Havok buzzsaw logo are trademarks of Havok.  Title, ownership
 * rights, and intellectual property rights in the Havok software remain in
 * Havok and/or its suppliers.
 * 
 * Use of this software for evaluation purposes is subject to and indicates
 * acceptance of the End User licence Agreement for this product. A copy of
 * the license is included with this software and is also available from salesteam@havok.com.
 * 
 */
